# ------------------------------------------------------------------------------------------------------------------------------------
# CanvassForSecurity (CFS) SAST source code vulnerability scan for JavaScript.
# For product info, see: https://rivera.canvasslabs.com/cfs/
#
# This workflow will install necessary resources to analyze the project's source code
# dependencies for known vulnerabilities.
#
# For GitHub Actions / NodeJS support, see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
# ------------------------------------------------------------------------------------------------------------------------------------

name: CanvassForSecurity (CFS) source code vulnerability scan

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  security_scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: | 
        echo $PWD
        mkdir unique_name
        ls -la 
        shopt -s extglob
        mv !(unique_name) unique_name
        echo $PWD
        ls -la
        
    # - name: Use Node.js version:16
    #   uses: actions/setup-node@v2
    #   with:
    #     node-version: '16'
    #     cache: 'npm'
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - run: sudo apt update -y
    - run: sudo apt install -y software-properties-common
    - run: sudo add-apt-repository -y ppa:deadsnakes/ppa
    - run: sudo apt install -y curl git unzip
    - run: java -version
    - run: export LC_ALL=C.UTF-8
    - run: export LANG=C.UTF-8
    - run: sudo apt install -y python3.8 python3.8-distutils python3-pip virtualenv 
    - run: sudo python3.8 -m pip install --upgrade pip
    - name: "Install NodeJS to get NPM"
      run: |
        # Install nodejs 12.x
        #sudo curl -sL https://deb.nodesource.com/setup_12.x | sudo bash -
        #sudo apt-get install -y nodejs
        sudo curl -LO https://nodejs.org/dist/v12.1.0/node-v12.1.0-linux-x64.tar.gz
        sudo gzip -d node-v12.1.0-linux-x64.tar.gz
        sudo tar -xf node-v12.1.0-linux-x64.tar
        sudo cp -r node-v12.1.0-linux-x64/{bin,include,lib,share} /usr/
        sudo ln -s /usr/bin/npm /usr/local/bin/npm
        sudo curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
        sudo echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
        sudo apt-get update
        sudo apt-get install -y yarn
    - run: |
        which npm
        node --version
        npm --version
    - name: "Install CanvassForSecurity (CFS)"
      run: |
        curl -o cfs.zip https://rivera.canvasslabs.com:5000/canvass_for_security/client/download/linux
        unzip cfs.zip
        rm cfs.zip
    - name: "CFS version checking"    
      env:
        CL_API_TOKEN: ${{ secrets.CL_API_TOKEN }}
      run: ./CanvassForSecurity version
    - name: "Install ORT"
      run: | 
        curl -o ort_binaries_only.zip https://rivera.canvasslabs.com:5000/client/download/ort
        unzip ort_binaries_only.zip
        rm ort_binaries_only.zip
    - name: "Run ORT to generate project dependency list"
      run: |
        virtualenv --python=python3.8 venv
        source venv/bin/activate
        cd ./ort
        set +e
        ./bin/ort analyze --input-dir ../unique_name --output-dir ../analyzer_results
        set -e
        if [ $? -eq 1 ]; then exit 1; fi
        cd ..
        # set up your canvasslabs's credential using pipeline's variables. See the Getting Started guide.
        # Submit source code and analyzer results to LiAnORT, including the security tool. If you are not using this tool, comment out the below line.
    - name: "Run CanvassForSecurity (CFS) on project dependencies"
      env:
        CL_API_TOKEN: ${{ secrets.CL_API_TOKEN }}
      run: ./CanvassForSecurity scan ./analyzer_results/analyzer-result.yml
      
